AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ResourcesPrefix:
    Type: String
    Default: "tgam-personalize"
    AllowedPattern: "[A-Za-z0-9-_]+"

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - "dev"
      - "stg"
      - "prod"

  ManagedBy:
    Type: String
    Default: "CloudFormation"
    AllowedValues:
      - "CloudFormation"

  CostAllocationProduct:
    Type: String
    Default: "amazon_personalize"
    AllowedValues:
      - "amazon_personalize"
      
  RepoName:
    Type: String
    Default: amazon_personalize_streaming_events
    AllowedPattern: "[A-Za-z0-9-_]+"

  RepoBranch:
    Type: String
    Default: development
    AllowedPattern: "[A-Za-z0-9-]+"

  ApplicationStackName:
    Type: String
    Default: amazon-personalize-app
    AllowedPattern: "[A-Za-z0-9-]+"

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - "-"
        - - !Ref ResourcesPrefix
          - !Ref Environment
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy
        - Key: "Versioning"
          Value: "Enabled"
      VersioningConfiguration:
        Status: Enabled
    
  CodeBuildLogs:    
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Join
        - "-"
        - - !Ref ResourcesPrefix
          - !Ref Environment
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      RetentionInDays: 90
    
  CodeBuildRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
    Type: AWS::IAM::Role
    
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join
        - "-"
        - - !Ref ResourcesPrefix
          - !Ref Environment
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      LogsConfig: 
        CloudWatchLogs:
          GroupName: !Ref CodeBuildLogs
          Status: ENABLED
          StreamName: SamBuild
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: TESTING_REGION
            Type: PLAINTEXT
            Value: us-east-1
          - Name: TESTING_CLOUDFORMATION_EXECUTION_ROLE
            Type: PLAINTEXT
            Value: !Sub CodePipelineRole.Arn
          - Name: TESTING_ARTIFACTS_BUCKET
            Type: PLAINTEXT
            Value: !Sub PipelineArtifactsBucket.Arn
          - Name: SAM_CLI_TELEMETRY
            Type: PLAINTEXT
            Value: "0"
          - Name: SAM_TEMPLATE
            Type: PLAINTEXT
            Value: "application.yaml"           
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: PipelineArtifactsBucket
    Properties:
      Name: !Join
        - "-"
        - - !Ref ResourcesPrefix
          - !Ref Environment
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy
      RestartExecutionOnUpdate: true
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeCommit
          OutputArtifacts:
          - Name: SourceCode
          Configuration:
            RepositoryName: !Ref RepoName
            BranchName: !Ref RepoBranch
            PollForSourceChanges: false
          RunOrder: 1
      # Build and Deploy, etc., stages would follow. Here is an example
      - Name: Deploy
        Actions:
        - Name: SamDeploy
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          InputArtifacts:
            - Name: SourceCode
          Configuration:
            #CombineArtifacts: 'true'
            ProjectName: !Ref CodeBuildProject
            #PrimarySource: MyApplicationSource1
            #EnvironmentVariables: !Sub "[{\"name\":\"TESTING_REGION\",\"value\":\"us-east-1\",\"type\":\"PLAINTEXT\"},{\"name\":\"TESTING_CLOUDFORMATION_EXECUTION_ROLE\",\"value\":\"${CodePipelineRole.Arn}\",\"type\":\"PLAINTEXT\"},{\"name\":\"TESTING_ARTIFACTS_BUCKET\",\"value\":\"${PipelineArtifactsBucket.Arn}\",\"type\":\"PLAINTEXT\"},{\"name\":\"SAM_CLI_TELEMETRY\",\"value\":\"0\",\"type\":\"PLAINTEXT\"},{\"name\":\"SAM_TEMPLATE\",\"value\":\"application.yaml\",\"type\":\"PLAINTEXT\"}]"
            #ActionMode: CREATE_UPDATE
            #Capabilities: CAPABILITY_IAM
            #RoleArn: !GetAtt CloudformationRole.Arn
            #StackName: !Ref ApplicationStackName
            #TemplatePath: !Sub "SourceCode::application.yaml"
          RunOrder: 1

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "CostAllocationProduct"
          Value: !Ref CostAllocationProduct
        - Key: "ManagedBy"
          Value: !Ref ManagedBy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

#No tags for policy
  CodeBuildRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: tgam-personalize-codebuild
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource:
              - !Sub ${CodeBuildLogs.Arn}
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketAcl'
              - 's3:GetBucketLocation'
            Resource:
              - !Sub ${PipelineArtifactsBucket.Arn}/*
              - !Sub ${PipelineArtifactsBucket.Arn}
          - Effect: Allow
            Action:
              - 'iam:ListPolicies'
            Resource:
              - "*"

      Roles:
        - !Ref CodeBuildRole
